{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MkLorum For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. about.md # Other markdown pages, images and other files.","title":"Home"},{"location":"#mklorum","text":"For full documentation visit mkdocs.org .","title":"MkLorum"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. about.md # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about/","text":"What is this section about ? Consider a Black-Box where you are getting values from a proximity sensor, as a time-series data. You want to predict and do inference with those values for certain classes using best approaches, such just it is optimized to full possibility and doesn't create any overhead during real-time communications. You have the sensor and a microcontroller board (in this repository mostly everything is related to STM32-ULP). An example of how configuration can be done in label-studio to represent different classes: <View> <Header value=\"Time Series classification\" style=\"font-weight: normal\"/> <Choices name=\"pattern\" toName=\"ts\"> <Choice value=\"Left_Prox\"/> </Choices> <TimeSeriesLabels name=\"label\" toName=\"ts\"> <Label value=\"phase_1\" background=\"red\"/> <Label value=\"phase_2\" background=\"green\"/> <Label value=\"phase_3\" background=\"yellow\"/> <Label value=\"phase_4\" background=\"blue\"/> </TimeSeriesLabels> <TimeSeries name=\"ts\" value=\"$Left_Prox\" valueType=\"url\"> <Channel column=\"Left_Prox\"/> </TimeSeries> </View> Feature Engineering Transforming raw data into features The performance of ML models heavily depends on the relevance of the features used to train them. 5 processes in feature engineering: -->Feature Creation -->Feature Transformation -->Feature Extraction -->Feature Selection -->Feature Scaling","title":"About"},{"location":"about/#what-is-this-section-about","text":"Consider a Black-Box where you are getting values from a proximity sensor, as a time-series data. You want to predict and do inference with those values for certain classes using best approaches, such just it is optimized to full possibility and doesn't create any overhead during real-time communications. You have the sensor and a microcontroller board (in this repository mostly everything is related to STM32-ULP). An example of how configuration can be done in label-studio to represent different classes: <View> <Header value=\"Time Series classification\" style=\"font-weight: normal\"/> <Choices name=\"pattern\" toName=\"ts\"> <Choice value=\"Left_Prox\"/> </Choices> <TimeSeriesLabels name=\"label\" toName=\"ts\"> <Label value=\"phase_1\" background=\"red\"/> <Label value=\"phase_2\" background=\"green\"/> <Label value=\"phase_3\" background=\"yellow\"/> <Label value=\"phase_4\" background=\"blue\"/> </TimeSeriesLabels> <TimeSeries name=\"ts\" value=\"$Left_Prox\" valueType=\"url\"> <Channel column=\"Left_Prox\"/> </TimeSeries> </View>","title":"What is this section about ?"},{"location":"about/#feature-engineering","text":"Transforming raw data into features The performance of ML models heavily depends on the relevance of the features used to train them. 5 processes in feature engineering: -->Feature Creation -->Feature Transformation -->Feature Extraction -->Feature Selection -->Feature Scaling","title":"Feature Engineering"}]}